{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNoB;AACpB,YAAY,kBAAkB;AAC9B,YAAY,aAAa;AACzB,YAAY,kBAAkB;AAC9B,YAAY,kBAAkB;AAC9B,YAAY,kBAAkB;AAC9B,YAAY,kBAAkB;AAC9B,YAAY,oBAAoB;AAChC,YAAY,cAAc;AAC1B,YAAY,aAAa;AACzB,YAAY,mBAAmB;AAC/B,YAAY,qBAAqB;AACjC,YAAY,cAAc;AAC1B,YAAY,oBAAoB;AAChC,YAAY,kBAAkB;AAC9B,YAAY,kBAAkB;;AAE9B;;AAEA;;AAEA;AACA,cAAc;AACd,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,uCAAuC;AAC3D,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yCAAyC,MAAM;AAC/C,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://cart-game/./style.css?e07e","webpack://cart-game/webpack/bootstrap","webpack://cart-game/webpack/runtime/make namespace object","webpack://cart-game/./index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './style.css'\n// import { handleCardClick } from './utils'\n// import { createCard } from './utils'\n// import { renderGameZone1 } from './utils'\n// import { renderGameZone2 } from './utils'\n// import { renderGameZone3 } from './utils'\n// import { levelDifficulty } from './utils'\n// import { renderAgainButton } from './utils'\n// import { renderTimer } from './utils'\n// import { startTimer } from './utils'\n// import { renderGameScreen } from './utils'\n// import { renderLevelsButton } from './utils'\n// import { levelsEvent } from './utils'\n// import { renderStartButton } from './utils'\n// import { renderMenuTitle } from './utils'\n// import { renderStartMenu } from './utils'\n\nconst app = document.querySelector('.app')\n\n// window.application\n\nconst game = {\n    blocks: {},\n    screens: {},\n    timers: [],\n    level: [],\n    cards: [\n        [\n            './img/10бубны.png',\n            './img/10крести.png',\n            './img/10пики.png',\n            './img/10черви.png',\n            './img/6бубны.png',\n            './img/6крести.png',\n            './img/6пики.png',\n            './img/6черви.png',\n            './img/7бубны.png',\n            './img/7крести.png',\n            './img/7пики.png',\n            './img/7черви.png',\n            './img/8бубны.png',\n            './img/8крести.png',\n            './img/8пики.png',\n            './img/8черви.png',\n            './img/9бубны.png',\n            './img/9крести.png',\n            './img/9пики.png',\n            './img/9черви.png',\n            './img/валетБубны.png',\n            './img/валетКрести.png',\n            './img/валетПики.png',\n            './img/валетЧерви.png',\n            './img/дамаБубны.png',\n            './img/дамаКрести.png',\n            './img/дамаПики.png',\n            './img/дамаЧерви.png',\n            './img/корольБубны.png',\n            './img/корольКрести.png',\n            './img/корольПики.png',\n            './img/корольЧерви.png',\n            './img/тузБубны.png',\n            './img/тузКрести.png',\n            './img/тузПики.png',\n            './img/тузЧерви.png',\n        ],\n    ],\n\n    renderScreen: function (screenName) {\n        game.timers.forEach((id) => {\n            clearInterval(id)\n        })\n\n        if (game.screens[screenName]) {\n            app.innerHTML = ''\n\n            game.screens[screenName]()\n        }\n    },\n    renderBlock: function (blockName, container) {\n        if (game.blocks[blockName]) {\n            game.blocks[blockName](container)\n        } else {\n            console.warn('Ошибка')\n        }\n    },\n}\n\n// handleCardClick()\n// createCard()\n// renderGameZone1()\n// renderGameZone2()\n// renderGameZone3()\n// levelDifficulty()\n// renderAgainButton()\n// renderTimer()\n// startTimer()\n// renderGameScreen()\n// renderLevelsButton()\n// levelsEvent()\n// renderStartButton()\n// renderMenuTitle()\n// renderStartMenu()\n\nlet intervalId\nconst gameDelay = 5000\n\nfunction handleCardClick(event) {\n    const card = event.currentTarget\n\n    // Если карточка уже открыта, ничего не делаем\n    if (card.classList.contains('flipped')) {\n        return\n    }\n\n    // Открываем карточку\n    card.classList.add('flipped')\n\n    // Получаем открытые карточки\n    const flippedCards = document.querySelectorAll('flipped')\n\n    // Если открыто две карточки, сравниваем их\n    if (flippedCards.length === 2) {\n        const firstCardImg = flippedCards[0].querySelector('img')\n        const secondCardImg = flippedCards[1].querySelector('img')\n\n        // console.log('debug');\n        // Если выбраны две одинаковые карты, то они остаются открытыми,\n        // иначе закрываем обе карты\n        if (firstCardImg.src === secondCardImg.src) {\n            flippedCards.forEach((card) => card.classList.remove('flipped'))\n        } else {\n            setTimeout(() => {\n                flippedCards.forEach((card) => card.classList.remove('flipped'))\n            }, 1000)\n        }\n    }\n}\n\nfunction createCard(container, cardIndex) {\n    const front = document.createElement('div')\n    front.classList.add('game-front')\n    container.appendChild(front)\n\n    const card = document.createElement('div')\n    card.classList.add('game-front-card')\n    front.appendChild(card)\n\n    const img = document.createElement('img')\n    // img.src = `${window.application.cards[0][cardIndex]}`\n    img.src = `${game.cards[0][cardIndex]}`\n    card.appendChild(img)\n\n    const back = document.createElement('div')\n    back.classList.add('game-back')\n    card.appendChild(back)\n\n    // Назначение обработчика клика на карточке\n    card.addEventListener('click', handleCardClick)\n\n    return card\n}\n\nfunction renderGameZone1(container) {\n    for (let i = 1; i <= 8; i++) {\n        const cardIndex = Math.round(Math.random() * 8)\n        const card = createCard(container, cardIndex)\n        intervalId = setTimeout(() => {\n            card.querySelector('img').src = 'img/рубашка.png'\n            clearInterval(interval)\n            interval = setInterval(startTimer, 10)\n        }, gameDelay)\n    }\n}\n\nfunction renderGameZone2(container) {\n    for (let i = 1; i <= 12; i++) {\n        const cardIndex = Math.round(Math.random() * 12)\n        const card = createCard(container, cardIndex)\n        intervalId = setTimeout(() => {\n            card.querySelector('img').src = 'img/рубашка.png'\n            clearInterval(interval)\n            interval = setInterval(startTimer, 10)\n        }, gameDelay)\n    }\n}\n\nfunction renderGameZone3(container) {\n    for (let i = 1; i <= 16; i++) {\n        const cardIndex = Math.round(Math.random() * 16)\n        const card = createCard(container, cardIndex)\n        intervalId = setTimeout(() => {\n            card.querySelector('img').src = 'img/рубашка.png'\n            clearInterval(interval)\n            interval = setInterval(startTimer, 10)\n        }, gameDelay)\n    }\n}\n\nfunction levelDifficulty() {\n    // const level = window.application.level[window.application.level.length - 1]\n    const level = game.level[game.level.length - 1]\n\n    switch (level) {\n        case '1':\n            game.blocks['game-card'] = renderGameZone1\n            break\n\n        case '2':\n            game.blocks['game-card'] = renderGameZone2\n            break\n\n        case '3':\n            game.blocks['game-card'] = renderGameZone3\n            break\n\n        default:\n            break\n    }\n}\n\nfunction renderAgainButton(container) {\n    const againButton = document.createElement('button')\n    againButton.classList.add('level-footer-button')\n    againButton.textContent = 'Начать заново'\n    container.appendChild(againButton)\n    againButton.addEventListener('click', () => {\n        const gameCards = document.querySelectorAll('.game-front-card')\n        gameCards.forEach((card) => card.classList.remove('flipped'))\n    })\n}\n\n// // Добавляем обработчик для каждой карточки\n// const gameCards = document.querySelectorAll('.game-front-card')\n// gameCards.forEach((card) => card.addEventListener('click', handleCardClick))\n\n// function renderAgainButton(container) {\n//     const againButton = document.createElement('button')\n//     againButton.classList.add('level-footer-button')\n//     againButton.textContent = 'Начать заново'\n//     container.appendChild(againButton)\n//     // Добавляем обработчик клика на кнопку \"Начать заново\"\n//     againButton.addEventListener('click', () => {\n//         gameCards.forEach((card) => card.classList.remove('flipped'))\n//     })\n// }\n\nfunction renderTimer(container) {\n    const timer = document.createElement('div')\n    timer.classList.add('timer')\n    container.appendChild(timer)\n\n    sec = document.createElement('h2')\n    sec.classList.add('timer-sec')\n    sec.textContent = '00'\n    timer.appendChild(sec)\n\n    dot = document.createElement('span')\n    dot.classList.add('timer-dot')\n    dot.textContent = '.'\n    timer.appendChild(dot)\n\n    milS = document.createElement('h2')\n    milS.classList.add('timer-mil')\n    milS.textContent = '00'\n    timer.appendChild(milS)\n}\n\nlet dot\nlet sec\nlet milS\nlet second = 0,\n    mil = 0,\n    interval\n\nfunction startTimer() {\n    let milElem = document.querySelector('.timer-mil')\n    let secElem = document.querySelector('.timer-sec')\n\n    mil++\n    if (mil < 9) {\n        milElem.textContent = '0' + mil\n    }\n\n    if (mil > 9) {\n        milElem.textContent = mil\n    }\n\n    if (mil > 99) {\n        second++\n        secElem.textContent = '0' + second\n        mil = 0\n        milElem.textContent = '0' + mil\n    }\n\n    // секунды\n    if (second < 9) {\n        secElem.textContent = '0' + second\n    }\n    if (second > 9) {\n        secElem.textContent = second\n    }\n    if (second > 59 || mil > 99) {\n        clearInterval(interval)\n        alert('Вы проиграли!')\n        sec = 0\n        mil = 0\n\n        // Экран поражения\n    }\n}\n\ngame.blocks['again-button'] = renderAgainButton\ngame.blocks['timer'] = renderTimer\n\nfunction renderGameScreen() {\n    levelDifficulty()\n    const gameZoneContainer = document.createElement('div')\n    gameZoneContainer.classList.add('game')\n\n    const header = document.createElement('header')\n    header.classList.add('game-header')\n\n    const main = document.createElement('main')\n    main.classList.add('game-main')\n    main.classList.add('center')\n\n    gameZoneContainer.appendChild(header)\n    gameZoneContainer.appendChild(main)\n    app.appendChild(gameZoneContainer)\n\n    // window.application.renderBlock('timer', header)\n    // window.application.renderBlock('again-button', header)\n    // window.application.renderBlock('game-card', main)\n    game.renderBlock('timer', header)\n    game.renderBlock('again-button', header)\n    game.renderBlock('game-card', main)\n\n    const gameBacks = document.querySelectorAll('.game-back')\n    gameBacks.forEach((back) => back.classList.add('back'))\n}\n\n// Добавляем \"game\" в список завершённых экранов\n// window.application.screens['game'] = renderGameScreen\ngame.screens['game'] = renderGameScreen\n\nfunction renderLevelsButton(container) {\n    for (let i = 1; i <= 3; i++) {\n        const levelButton = document.createElement('input')\n        levelButton.setAttribute('type', 'button')\n        levelButton.setAttribute('value', i)\n        levelButton.classList.add('level-main-button')\n        container.appendChild(levelButton)\n\n        levelButton.addEventListener('click', () => {\n            // window.application.level.pop()\n            // window.application.level.push(levelButton.value)\n            game.level.pop()\n            game.level.push(levelButton.value)\n\n            switch (levelButton.value) {\n                case '1':\n                    levelsEvent('1')\n                    break\n\n                case '2':\n                    levelsEvent('2')\n                    break\n\n                case '3':\n                    levelsEvent('3')\n                    break\n\n                default:\n                    break\n            }\n        })\n    }\n}\n\nlet startButton\n\nfunction levelsEvent(param) {\n    startButton.addEventListener('click', () => {\n        game.renderScreen('game')\n        console.log(`Уровень сложности ${param}`)\n    })\n}\n\nfunction renderStartButton(container) {\n    startButton = document.createElement('button')\n    startButton.classList.add('start-button')\n    startButton.textContent = 'Старт'\n    container.appendChild(startButton)\n}\n\nfunction renderMenuTitle(container) {\n    const levelTitle = document.createElement('h1')\n    levelTitle.classList.add('level-header-title')\n    levelTitle.textContent = 'Выбери сложность'\n    container.appendChild(levelTitle)\n}\n\n// window.application.blocks['menu-title'] = renderMenuTitle\n// window.application.blocks['level-button'] = renderLevelsButton\n// window.application.blocks['start-button'] = renderStartButton\ngame.blocks['menu-title'] = renderMenuTitle\ngame.blocks['level-button'] = renderLevelsButton\ngame.blocks['start-button'] = renderStartButton\n\nfunction renderStartMenu() {\n    const startMenuContainer = document.createElement('div')\n    startMenuContainer.classList.add('level')\n\n    const startMenuHeader = document.createElement('div')\n    startMenuHeader.classList.add('level-header')\n\n    const startMenuLevel = document.createElement('div')\n    startMenuLevel.classList.add('level-main')\n\n    const startMenuStart = document.createElement('div')\n    startMenuStart.classList.add('level-footer')\n\n    startMenuContainer.appendChild(startMenuHeader)\n    startMenuContainer.appendChild(startMenuLevel)\n    startMenuContainer.appendChild(startMenuStart)\n\n    app.appendChild(startMenuContainer)\n\n    // window.application.renderBlock('menu-title', startMenuHeader)\n    // window.application.renderBlock('level-button', startMenuLevel)\n    // window.application.renderBlock('start-button', startMenuStart)\n    game.renderBlock('menu-title', startMenuHeader)\n    game.renderBlock('level-button', startMenuLevel)\n    game.renderBlock('start-button', startMenuStart)\n}\nrenderStartMenu()\n\n// Инициализация изображений для карточек\ngame.cards = [\n    [\n        './img/10бубны.png',\n        './img/10крести.png',\n        './img/10пики.png',\n        './img/10черви.png',\n        './img/6бубны.png',\n        './img/6крести.png',\n        './img/6пики.png',\n        './img/6черви.png',\n        './img/7бубны.png',\n        './img/7крести.png',\n        './img/7пики.png',\n        './img/7черви.png',\n        './img/8бубны.png',\n        './img/8крести.png',\n        './img/8пики.png',\n        './img/8черви.png',\n        './img/9бубны.png',\n        './img/9крести.png',\n        './img/9пики.png',\n        './img/9черви.png',\n        './img/валетБубны.png',\n        './img/валетКрести.png',\n        './img/валетПики.png',\n        './img/валетЧерви.png',\n        './img/дамаБубны.png',\n        './img/дамаКрести.png',\n        './img/дамаПики.png',\n        './img/дамаЧерви.png',\n        './img/корольБубны.png',\n        './img/корольКрести.png',\n        './img/корольПики.png',\n        './img/корольЧерви.png',\n        './img/тузБубны.png',\n        './img/тузКрести.png',\n        './img/тузПики.png',\n        './img/тузЧерви.png',\n    ],\n]\n// Запуск начального экрана\ngame.renderScreen('start')\n"],"names":[],"sourceRoot":""}